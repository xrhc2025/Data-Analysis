{"version":3,"sources":["App.js","index.js"],"names":["Content","Sider","Layout","App","chartType","setChartType","useState","chartData","setChartData","targetData","setTargetData","useEffect","async","response","fetch","type","data","json","error","console","fetchData","processedData","processData","length","map","item","name","title","value","rating","nodes","id","symbolSize","category","genres","split","links","i","push","source","target","filter","countries","chart","echarts","document","getElementById","option","tooltip","trigger","series","xAxis","yAxis","features","layout","force","repulsion","radar","indicator","max","symbol","setOption","dispose","React","createElement","style","minHeight","Menu","theme","mode","defaultSelectedKeys","Item","key","onClick","background","margin","width","height","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.7825812a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n  import { Layout, Menu } from 'antd';\n // 修改导入语句以适配 ECharts\n  import * as echarts from 'echarts';\nimport './App.css';\nimport KLineChart from './components/KLineChart';\nimport TreeChart from './components/TreeChart';\nimport Treemap from './components/Treemap';\nimport SunburstChart from './components/SunburstChart';\nimport SankeyChart from './components/SankeyChart';\nimport FunnelChart from './components/FunnelChart';\nimport PictorialBarChart from './components/PictorialBarChart';\n\nconst { Content, Sider } = Layout;\n\nfunction App() {\n  const [chartType, setChartType] = useState('');\n  const [chartData, setChartData] = useState([]);\n  // 查询到的所有数据\n  const [targetData, setTargetData] = useState([]);\n\n  const fetchData = async (type) => {\n    try {\n      // const response = await fetch(`http://127.0.0.1:5000/get_chart_data/${type}`);\n      const response = await fetch(`http://82.156.195.106:7001/get_chart_data/${type}`);\n      const data = await response.json();\n      // setChartData(data || []);\n      setTargetData(data || []);\n      setChartType(type);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData('pie');\n  }, []);\n  useEffect(() => {\n    // 类型变化时处理数据\n    if (chartType) {\n      // 假设你有一个函数来处理数据\n      const processedData = processData(targetData);\n      setChartData(processedData);\n    }\n  }, [chartType]);\nconst processData = (data) => {\n  if (!data || !data.length) return [];\n  \n  switch (chartType) {\n    case 'pie':\n    case 'bar':\n    case 'line':\n    case 'scatter':\n    case 'radar':\n    case 'path':\n    case 'funnel':\n    case 'pictorial_bar':\n      return data.map(item => ({\n        name: item.title,\n        value: item.rating\n      }));\n    \n    case 'graph':\n      const nodes = data.map(item => ({\n        id: item.title,\n        name: item.title,\n        symbolSize: item.rating * 2,\n        category: item.genres.split(' ')[0]\n      }));\n      \n      const links = [];\n      for (let i = 0; i < nodes.length - 1; i++) {\n        links.push({\n          source: nodes[i].id,\n          target: nodes[i + 1].id\n        });\n      }\n      \n      return { nodes, links };\n    \n    case 'china_map':\n      return data.filter(item => item.countries === '中国').map(item => ({\n        name: item.title,\n        value: item.rating\n      }));\n    \n    default:\n      return data;\n  }\n};\n\n  useEffect(() => {\n    const chart = echarts.init(document.getElementById('chart'));\n    let option;\n    switch (chartType) {\n      case 'pie':\n        option = {\n          tooltip: { trigger: 'item' },\n          series: [{\n            type: 'pie',\n            data: chartData\n          }]\n        };\n        break;\n      case 'bar':\n        option = {\n          tooltip: { trigger: 'axis' },\n          xAxis: { data: chartData.map(item => item.name) },\n          yAxis: {},\n          series: [{\n            type: 'bar',\n            data: chartData.map(item => item.value)\n          }]\n        };\n        break;\n      case 'line':\n        option = {\n          tooltip: { trigger: 'axis' },\n          xAxis: { data: chartData.map(item => item.name) },\n          yAxis: {},\n          series: [{\n            type: 'line',\n            data: chartData.map(item => item.value)\n          }]\n        };\n        break;\n      case 'china_map':\n        echarts.registerMap('china', {type: 'FeatureCollection', features: chartData.features});\n        option = {\n          tooltip: { trigger: 'item' },\n          series: [{\n            type: 'map',\n            map: 'china',\n            data: chartData\n          }]\n        };\n        break;\n      case 'graph':\n        option = {\n          tooltip: {},\n          series: [{\n            type: 'graph',\n            layout: 'force',\n            force: { repulsion: 1000 },\n            data: chartData.nodes,\n            links: chartData.links\n          }]\n        };\n        break;\n      case 'scatter':\n        option = {\n          tooltip: { trigger: 'item' },\n          xAxis: {},\n          yAxis: {},\n          series: [{\n            type: 'scatter',\n            data: chartData\n          }]\n        };\n        break;\n      case 'radar':\n        option = {\n          tooltip: { trigger: 'item' },\n          radar: {\n            indicator: [\n              { name: 'A', max: 100 },\n              { name: 'B', max: 100 },\n              { name: 'C', max: 100 },\n              { name: 'D', max: 100 },\n              { name: 'E', max: 100 }\n            ]\n          },\n          series: [{\n            type: 'radar',\n            data: chartData\n          }]\n        };\n        break;\n      case 'path':\n        option = {\n          tooltip: { trigger: 'axis' },\n          xAxis: {},\n          yAxis: {},\n          series: [{\n            type: 'line',\n            data: chartData,\n            symbol: 'circle',\n            symbolSize: 10\n          }]\n        };\n        break;\n      default:\n        break;\n    }\n    if (option) {\n      chart.setOption(option);\n    }\n    return () => {\n      chart.dispose();\n    };\n  }, [chartData]);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider>\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['pie']}>\n          <Menu.Item key=\"pie\" onClick={() => setChartType('pie')}>饼图</Menu.Item>\n          <Menu.Item key=\"bar\" onClick={() => setChartType('bar')}>柱状图</Menu.Item>\n          <Menu.Item key=\"line\" onClick={() => setChartType('line')}>折线图</Menu.Item>\n          <Menu.Item key=\"graph\" onClick={() => setChartType('graph')}>关系图谱</Menu.Item>\n          <Menu.Item key=\"scatter\" onClick={() => setChartType('scatter')}>散点图</Menu.Item>\n          <Menu.Item key=\"radar\" onClick={() => setChartType('radar')}>雷达图</Menu.Item>\n          <Menu.Item key=\"path\" onClick={() => setChartType('path')}>路径图</Menu.Item>\n          {/*<Menu.Item key=\"k_line\" onClick={() => setChartType('k_line')}>K线图</Menu.Item>\n          <Menu.Item key=\"tree\" onClick={() => setChartType('tree')}>树图</Menu.Item>\n          <Menu.Item key=\"treemap\" onClick={() => setChartType('treemap')}>矩形树图</Menu.Item>\n          <Menu.Item key=\"sunburst\" onClick={() => setChartType('sunburst')}>旭日图</Menu.Item>\n          <Menu.Item key=\"sankey\" onClick={() => setChartType('sankey')}>桑基图</Menu.Item>\n          <Menu.Item key=\"funnel\" onClick={() => setChartType('funnel')}>漏斗图</Menu.Item>\n          <Menu.Item key=\"pictorial_bar\" onClick={() => setChartType('pictorial_bar')}>象形柱图</Menu.Item>*/}\n        </Menu>\n      </Sider>\n      <Layout style={{background: '#f0f2f5'}}>\n        <Content style={{ margin: '16px' }}>\n          {/*{chartType === 'k_line' && <KLineChart />}\n          {chartType === 'tree' && <TreeChart />}\n          {chartType === 'treemap' && <Treemap />}\n          {chartType === 'sunburst' && <SunburstChart />}\n          {chartType === 'sankey' && <SankeyChart />}\n          {chartType === 'funnel' && <FunnelChart />}\n          {chartType === 'pictorial_bar' && <PictorialBarChart />}*/}\n          <div id=\"chart\" style={{ width: '100%', height: '80vh' }}></div>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}